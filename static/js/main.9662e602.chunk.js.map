{"version":3,"sources":["Components/Forms/Forms.js","Components/Navs/NavComps/header.js","Components/Navs/NavComps/footer.js","Components/Navs/Navs.js","Components/TaskList/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["forms","_ref","onSubmit","inputDisplay","currInput","currVal","react_default","a","createElement","type","placeholder","onChange","value","header","style","footer","navs","backgroundColor","color","padding","display","justifyContent","textTransform","NavComps_header","NavComps_footer","taskList","list","checkIndex","checked","deleteHit","edit","listStyleType","map","el","index","key","onClick","name","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addTask","event","preventDefault","console","log","state","editMode","currentVal","setState","todos","element","editIndex","concat","toConsumableArray","currentInput","target","onCheck","toCkIndex","parseInt","tmp","deleteEl","filter","editEl","className","Navs","Forms","TaskList","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9662e602.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst forms = ({ onSubmit, inputDisplay, currInput, currVal }) => {\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <p> To Add => {inputDisplay} </p>{\" \"}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"I have to do this or that\"\r\n        onChange={currInput}\r\n        value={currVal}\r\n      />{\" \"}\r\n      <button type=\"submit\"> Add Task </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default forms;\r\n","import React from 'react';\r\n\r\nconst header = ({style}) => {\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div style={style}>\r\n            <div>The ToDo List </div>\r\n            <div>Start Adding!</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default header;","import React from 'react';\r\n\r\nconst footer = ({style}) =>{\r\n\r\n    return (\r\n        <div style={style}>\r\n            <div>Copyright Protected by TechWorks.</div> <div>2019</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default footer;","import React from 'react';\r\nimport Header from './NavComps/header';\r\nimport Footer from './NavComps/footer';\r\n\r\nconst navs = ({header}) => {\r\n\r\n    const style = {\r\n        backgroundColor: '#0000ee',\r\n        color: 'white',\r\n        padding: '10px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        textTransform: 'uppercase'\r\n    }\r\n    \r\n    return(\r\n        (header)?\r\n        <Header style={style}/>\r\n        : \r\n        <Footer style={style}/>\r\n    )\r\n}\r\n\r\nexport default navs","import React from \"react\";\r\n\r\nconst taskList = ({ list, checkIndex, checked, deleteHit, edit }) => {\r\n  let style = {\r\n    listStyleType: \"none\"\r\n  };\r\n\r\n  return list.map((el, index) =>\r\n    checkIndex[index] === true ? (\r\n      <li key={index} style={style}>\r\n        <input type=\"checkbox\" value={index} onClick={checked} />{\" \"}\r\n        <del> {el} </del>{\" \"}\r\n        <button name=\"delete\" onClick={deleteHit} value={index}>\r\n          {\" \"}\r\n          Delete{\" \"}\r\n        </button>{\" \"}\r\n      </li>\r\n    ) : (\r\n      <li key={index} style={style}>\r\n        <input type=\"checkbox\" value={index} onClick={checked} /> {el}{\" \"}\r\n        <button name=\"delete\" onClick={deleteHit} value={index}>\r\n          {\" \"}\r\n          Delete{\" \"}\r\n        </button>{\" \"}\r\n        <button name=\"edit\" onClick={edit} value={index}>\r\n          {\" \"}\r\n          Edit{\" \"}\r\n        </button>{\" \"}\r\n      </li>\r\n    )\r\n  );\r\n};\r\n\r\nexport default taskList;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Forms from \"./Components/Forms/Forms\";\r\nimport Navs from \"./Components/Navs/Navs\";\r\nimport TaskList from \"./Components/TaskList/TaskList\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos: [\"this is some default todos\", \"this is the next todo\"],\r\n      currentVal: \"\",\r\n      editMode: false,\r\n      editIndex: null,\r\n      checkIndex: []\r\n    };\r\n  }\r\n\r\n  addTask = event => {\r\n    event.preventDefault();\r\n    console.log(\"[App.js] addTask runs\");\r\n\r\n    if (this.state.editMode) {\r\n      if (this.state.currentVal !== \"\") {\r\n        console.log(\"value of newArr: \");\r\n\r\n        this.setState({\r\n          currentVal: \"\",\r\n          todos: this.state.todos.map((element, index) => {\r\n            if (this.state.editIndex === index) {\r\n              console.log(\"if conditional in forEach\");\r\n              return this.state.currentVal;\r\n            } else return element;\r\n          }),\r\n          editMode: false\r\n        });\r\n      }\r\n    } else if (this.state.currentVal !== \"\") {\r\n      this.setState({\r\n        currentVal: \"\",\r\n        todos: [...this.state.todos, this.state.currentVal]\r\n      });\r\n    }\r\n  };\r\n\r\n  currentInput = props => {\r\n    console.log(\"props in currentInput 29\", props.target.value);\r\n    console.log(\"currentInput [App.js]: \", props.target.value);\r\n\r\n    this.setState({\r\n      currentVal: props.target.value\r\n    });\r\n  };\r\n\r\n  currentVal = () => {\r\n    console.log(\"currentVal [App.js]: \");\r\n\r\n    return <p> {this.state.value} </p>;\r\n  };\r\n\r\n  onCheck = props => {\r\n    console.log(\"[App.js] onCheck event\");\r\n\r\n    const toCkIndex = parseInt(props.target.value);\r\n\r\n    let tmp = this.state.todos.map((el, index) => {\r\n      if (index === toCkIndex) {\r\n        console.log(\"index===toCkIndex conditional\");\r\n\r\n        if (this.state.checkIndex[index] === true) {\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      if (this.state.checkIndex[index] === true) {\r\n        console.log(\"this.state.checkIndex[index]===true\");\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    });\r\n\r\n    console.log(\"tmp in onCheckCheck \", tmp);\r\n    this.setState({\r\n      checkIndex: tmp\r\n    });\r\n  };\r\n\r\n  deleteEl = props => {\r\n    console.log(\"[App.js] deleteEl clicked\");\r\n    console.log(\"props.key deleteEl: \" + props.target.value);\r\n\r\n    this.setState({\r\n      todos: this.state.todos.filter(\r\n        (el, index) => index !== parseInt(props.target.value)\r\n      ),\r\n      checkIndex: this.state.checkIndex.filter(\r\n        (el, index) => index !== parseInt(props.target.value)\r\n      )\r\n    });\r\n  };\r\n\r\n  editEl = event => {\r\n    console.log(\"[App.js] editEl clicked\");\r\n    console.log(\"editEl event.target.value: \", event.target.value);\r\n    console.log(\"type of target value: \", typeof event.target.value);\r\n\r\n    this.setState({\r\n      currentVal: this.state.todos[parseInt(event.target.value)],\r\n      editMode: true,\r\n      editIndex: parseInt(event.target.value)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <Navs header={true} />{\" \"}\r\n        <div className=\"App\">\r\n          <Forms\r\n            onSubmit={this.addTask}\r\n            currInput={this.currentInput}\r\n            currVal={this.state.currentVal}\r\n            inputDisplay={this.state.currentVal}\r\n          />{\" \"}\r\n          <TaskList\r\n            list={this.state.todos}\r\n            checkIndex={this.state.checkIndex}\r\n            checked={this.onCheck}\r\n            deleteHit={this.deleteEl}\r\n            edit={this.editEl}\r\n          />\r\n        </div>{\" \"}\r\n        <Navs header={false} />{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}